/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "HAL.h"

void delay(void){
	for(uint32_t i = 0; i < 500000/2; i++);
}

// spi2 mosi--> PB15
// spi miso-->PB14
// Spi2  sck--> PB13
// spi2 nss--> PB12
// Alt func-->AF05
void SPI2_GPIO_Init(void){
	GPIO_Handle SPIPin;
	SPIPin.pGPIOx = GPIOB;
	SPIPin.GPIO_PinConfig.GPIO_PinMode              = GPIO_MODE_ALTFN;
    SPIPin.GPIO_PinConfig.GPIO_PinAltFunMode        = 5;
    SPIPin.GPIO_PinConfig.GPIO_PinOPType            = GPIO_OP_TYPE_PP;
    SPIPin.GPIO_PinConfig.GPIO_PinPuPdControl       = GPIO_NO_PUPD;
    SPIPin.GPIO_PinConfig.GPIO_PinSpeed             = GPIO_SPEED_FAST;
    SPIPin.GPIO_PinConfig.GPIO_PinNumber            = GPIO_PIN_NO_13;           // SPI2_SLK
    GPIO_INIT(&SPIPin);
   // SPIPin.GPIO_PinConfig.GPIO_PinNumber            = GPIO_PIN_NO_14;           // SPI2_MISO
   // GPIO_INIT(&SPIPin);
    SPIPin.GPIO_PinConfig.GPIO_PinNumber            = GPIO_PIN_NO_15;           // SPI2_MOSI
    GPIO_INIT(&SPIPin);
    SPIPin.GPIO_PinConfig.GPIO_PinNumber            = GPIO_PIN_NO_12;           // SPI2_nss
    GPIO_INIT(&SPIPin);
}




void SPI2_INIT(void){
    SPI_Handle_t SPI2Handle;
    SPI2Handle.pSPIx = SPI2;
    SPI2Handle.SPI_Config.SPI_BusConfig         = SPI_fULL_DUPLEX;
    SPI2Handle.SPI_Config.SPI_DeviceMode        = SPI_DEVICE_MODE_MASTER;
    SPI2Handle.SPI_Config.SPI_sclkSpeed         = SPI_CLK_SPEED_DIV8;  //clock 2MHz
    SPI2Handle.SPI_Config.SPI_DFF               = SPI_DFF_8BIT;
    SPI2Handle.SPI_Config.SPI_CPOL              = SPI_CPOL_LOW;
    SPI2Handle.SPI_Config.SPI_CPHA              = SPI_CPHA_LOW;
    SPI2Handle.SPI_Config.SPI_SSM               = SPI_SSM_DI;
    SPI_INIT(&SPI2Handle);

}

void GPIO_ButtonInit(void){
    GPIO_Handle Gpiobtu;
    Gpiobtu.pGPIOx = GPIOA;
    Gpiobtu.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
	Gpiobtu.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
	Gpiobtu.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	Gpiobtu.GPIO_PinConfig.GPIO_PinPuPdControl =  GPIO_NO_PUPD;
	GPIO_INIT(&Gpiobtu);
}

int main(void)
{
    char user_data[] = "Hallo, world";
    GPIO_ButtonInit();
   SPI2_GPIO_Init();
   SPI2_INIT();
   //Enable the spi
   SPI_SSOEConfig(SPI2, ENABLE);
   while(1){
    while (! GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0));
    delay();
    SPI_PeriControl(SPI2, ENABLE);
    uint8_t dataLen = strlen(user_data);
     SPI_SendData(SPI2, &dataLen, 1);
    SPI_SendData(SPI2, (uint8_t*)user_data, strlen(user_data));
    while (Spi_GetFlagStatus(SPI2,SPI_SR_BUSY_FLAG));
    SPI_PeriControl(SPI2, DISABLE);
   }
}
